{"version":3,"sources":["Components/SearchBar/HeaderLogo.js","Components/SearchBar/SearchBar.js","Components/SearchBar/Options.js","Components/SearchBar/SearchContainer.js","Components/PostContainer/PostHeader.js","Components/PostContainer/PostBody.js","Components/CommentSection/CommentMenu.js","Components/CommentSection/CommentForm.js","Components/CommentSection/CommentSection.js","Components/CommentSection/Likes.js","Components/CommentSection/CommentContainer.js","Components/PostContainer/PostContainer.js","dummy-data.js","Components/PostContainer/PostsPage.js","Components/Login/LoginHeader.js","Components/Login/Login.js","App.js","Components/Authentication/authenticate.js","serviceWorker.js","index.js"],"names":["HeaderLogo","react_default","a","createElement","href","className","style","color","textDecoration","SearchBar","props","onSubmit","searchFilter","type","placeholder","textAlign","value","search","onChange","handleSearchInput","Options","onClick","logOut","SearchContainer","SearchBar_HeaderLogo","Components_SearchBar_SearchBar","SearchBar_Options","displayLiked","PostHeader","src","thumbNail","fontWeight","username","PostBody","img","CommentMenu","CommentForm","addNewComment","comment","handleChange","CommentSection_CommentMenu","CommentSection","state","comments","_this","text","e","setState","target","preventDefault","concat","Object","toConsumableArray","localStorage","getItem","this","map","item","Moment","fromNow","CommentSection_CommentForm","Component","PostLikes","likes","addLikes","classList","toggle","includes","prevState","commentInputFocus","document","querySelector","focus","Fragment","CommentContainer","Likes","toggleLiked","id","Components_CommentSection_CommentSection","PostContainer","list","post","PostContainer_PostHeader","thumbnailUrl","PostContainer_PostBody","imageUrl","liked","CommentSection_CommentContainer","dummyData","timestamp","PostsPage","display","componentDidMount","Data","filter","clear","window","location","reload","SearchBar_SearchContainer","Components_PostContainer_PostContainer","LoginHeader","Login","password","handleInputChange","defineProperty","name","submitLogin","setItem","Login_LoginHeader","fontFamily","fontSize","authenticate","Component1","Component2","_React$Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isLoggedIn","inherits","createClass","key","React","PostContainer_PostsPage","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a19d79d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HeaderLogo = () => (\r\n  <a\r\n    href=\"\" //Currently refreshes page. Will adjust the rout to \"Home\" when we learn about routing\r\n    className=\"logo\"\r\n    style={{ color: \"black\", textDecoration: \"none\" }}\r\n  >\r\n    <i className=\"fab fa-instagram fa-lg fa-2x\" /> <h1>FakestaGram</h1>\r\n  </a>\r\n);\r\n\r\nexport default HeaderLogo;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = props => (\r\n  <form onSubmit={props.searchFilter} className=\"search-form\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"&#xF002; Search\"\r\n      style={{ textAlign: \"center\" }}\r\n      value={props.search}\r\n      onChange={props.handleSearchInput}\r\n    />\r\n  </form>\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst Options = (props) => (\r\n  <div className=\"options\">\r\n    <i className=\"far fa-compass fa-2x\" />\r\n    <i className=\"far fa-heart fa-2x\" /*onClick={props.displayLiked}*/ />\r\n    <div className=\"user\">\r\n    <i className=\"far fa-user fa-2x\" onClick={props.logOut} />\r\n    <p>Logout</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport Logo from \"./HeaderLogo\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Options from \"./Options\";\r\nimport \"./Header.css\";\r\n\r\nconst SearchContainer = props => (\r\n  <div className=\"search-container\">\r\n    <Logo />\r\n    <SearchBar\r\n      search={props.search}\r\n      searchFilter={props.searchFilter}\r\n      handleSearchInput={props.handleSearchInput}\r\n    />\r\n    <Options displayLiked={props.displayLiked} logOut={props.logOut} />\r\n  </div>\r\n);\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostHeader = props => (\r\n  <div className=\"post-header\">\r\n    <img src={props.thumbNail} />\r\n    <p style={{ fontWeight: \"bold\" }}> {props.username} </p>\r\n  </div>\r\n);\r\n\r\nPostHeader.propTypes = {\r\n  thumbNail: PropTypes.string,\r\n  username: PropTypes.string\r\n};\r\n\r\nexport default PostHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PostBody = props => (\r\n  <div className=\"post-body\">\r\n    <img src={props.img} />\r\n  </div>\r\n);\r\n\r\nPostBody.propTypes = {\r\n  img: PropTypes.string\r\n};\r\n\r\nexport default PostBody;\r\n","import React from \"react\";\r\n\r\nconst CommentMenu = () => (\r\n  <div className=\"comment-menu\">\r\n    <div className=\"menu-dot\" />\r\n    <div className=\"menu-dot\" />\r\n    <div className=\"menu-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default CommentMenu;\r\n","import React from \"react\";\r\nimport Menu from \"./CommentMenu\";\r\n\r\nconst CommentForm = props => (\r\n  <form className=\"comment-form\" onSubmit={props.addNewComment}>\r\n    <input\r\n      className=\"comment-input\"\r\n      type=\"text\"\r\n      value={props.comment}\r\n      placeholder=\"Add a comment...\"\r\n      onChange={props.handleChange}\r\n    />\r\n    <Menu />\r\n  </form>\r\n);\r\n\r\nexport default CommentForm;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./CommentForm\";\r\nimport Moment from \"moment\";\r\n\r\nclass CommentSection extends Component {\r\n  state = {\r\n    comments: this.props.comments,\r\n    text: \"\",\r\n    username: \" \"\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({\r\n  //     comments: this.props.comments\r\n  //   });\r\n  // }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  addNewComment = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      comments: [\r\n        ...this.state.comments,\r\n        {\r\n          text: this.state.text,\r\n          username: localStorage.getItem(\"username\")\r\n        }\r\n      ],\r\n      text: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comment\">\r\n        {this.state.comments.map(item => {\r\n          return (\r\n            <p>\r\n              <span style={{ fontWeight: \"bold\" }}>{item.username}</span>{\" \"}\r\n              {item.text}\r\n            </p>\r\n          );\r\n        })}\r\n        <p> {Moment(\"20170710\").fromNow()}</p>\r\n        <hr />\r\n        <Form\r\n          comment={this.state.text}\r\n          handleChange={this.handleChange}\r\n          addNewComment={this.addNewComment}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentSection;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PostLikes extends Component {\r\n  state = {\r\n    likes: this.props.likes\r\n  };\r\n\r\n  addLikes = e => {\r\n    e.target.classList.toggle(\"liked\");\r\n    if (e.target.className.includes(\"liked\")) {\r\n      \r\n      this.setState(prevState => ({\r\n        likes: ++prevState.likes\r\n      }));\r\n    } else {\r\n      this.setState(prevState => ({ likes: --prevState.likes }));\r\n    }\r\n  };\r\n\r\n  commentInputFocus = e => {\r\n    document.querySelector(\".comment-input\").focus();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"likes\">\r\n          <i className=\"far fa-heart fa-lg\" onClick={this.addLikes} />\r\n          <div className=\"comment-logo\">\r\n            <i\r\n              className=\"far fa-comment fa-lg\"\r\n              onClick={this.commentInputFocus}\r\n            />\r\n          </div>\r\n        </div>\r\n        <p className=\"likes-counter\" style={{ fontWeight: \"bold\" }}>\r\n          {\" \"}\r\n          {this.state.likes} likes\r\n        </p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostLikes;\r\n","import React from \"react\";\r\nimport CommentSection from \"./CommentSection\";\r\nimport Likes from \"./Likes\";\r\nimport \"./Comment.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CommentContainer = props => (\r\n  <div className=\"comment-container\">\r\n    <Likes likes={props.likes} toggleLiked={props.toggleLiked} id={props.id} />\r\n    <div className=\"comments\">\r\n      <CommentSection comments={props.comments} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentContainer.propTypes = {\r\n  likes: PropTypes.number,\r\n  comments: PropTypes.array,\r\n  username: PropTypes.string,\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default CommentContainer;\r\n","import React from \"react\";\r\nimport Header from \"./PostHeader\";\r\nimport PostBody from \"./PostBody\";\r\nimport Comments from \"../CommentSection/CommentContainer\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Post.css\";\r\n\r\nconst PostContainer = props => (\r\n  <React.Fragment>\r\n    {props.list.map(post => (\r\n      <div className=\"post-container\">\r\n        <Header thumbNail={post.thumbnailUrl} username={post.username} />\r\n        <PostBody img={post.imageUrl} liked={post.liked} />\r\n        <Comments likes={post.likes} comments={post.comments} toggleLiked={props.toggleLiked} id={post.id} />\r\n      </div>\r\n    ))}\r\n  </React.Fragment>\r\n);\r\n\r\nPostContainer.propTypes = {\r\n  posts: PropTypes.array\r\n};\r\n\r\nexport default PostContainer;\r\n","const dummyData = [\r\n  {\r\n    username: \"philzcoffee\",\r\n    thumbnailUrl:\r\n      \"https://tk-assets.lambdaschool.com/ecd33d34-c124-4b75-92d2-e5c52c171ed8_11201517_887808411287357_1307163552_a.jpg\",\r\n\r\n    imageUrl:\r\n      \"https://tk-assets.lambdaschool.com/69cf901b-f96d-466e-a745-ff2a01effac9_philz-image.jpg\",\r\n    likes: 400,\r\n    timestamp: \"July 17th 2017, 12:42:40 pm\",\r\n    comments: [\r\n      {\r\n        username: \"philzcoffee\",\r\n        text:(\r\n          \"We've got more than just delicious coffees to offer at our shops!\")\r\n      },\r\n      {\r\n        username: \"biancasaurus\",\r\n        text: \"Looks delicious!\"\r\n      },\r\n      {\r\n        username: \"martinseludo\",\r\n        text: \"Can't wait to try it!\"\r\n      }\r\n    ],\r\n    liked: false,\r\n    id: 1\r\n  },\r\n  {\r\n    username: \"fortnite\",\r\n    thumbnailUrl:\r\n      \"https://tk-assets.lambdaschool.com/ce601fdf-7cb0-4098-83d3-1a1584a72513_30841289_342445456281079_112845064497004544_n.jpg\",\r\n    imageUrl:\r\n      \"https://tk-assets.lambdaschool.com/89d13918-b7a2-4b40-9658-f376ea3f6b59_37131538_213683546146400_1083714364399157248_n.jpg\",\r\n    likes: 4307,\r\n    timestamp: \"July 15th 2017, 03:12:09 pm\",\r\n    comments: [\r\n      {\r\n        username: \"twitch\",\r\n        text: \"Epic Street Fighter action here in Las Vegas at #EVO2017!\"\r\n      },\r\n      {\r\n        username: \"michaelmarzetta\",\r\n        text: \"Omg that match was crazy\"\r\n      },\r\n      {\r\n        username: \"themexican_leprechaun\",\r\n        text: \"What a setup\"\r\n      },\r\n      {\r\n        username: \"dennis_futbol\",\r\n        text: \"It that injustice\"\r\n      },\r\n      {\r\n        username: \"dennis_futbol\",\r\n        text: \"Is\"\r\n      }\r\n    ],\r\n    liked: false,\r\n    id: 2\r\n  },\r\n  {\r\n    username: \"playhearthstone\",\r\n    thumbnailUrl:\r\n      \"https://tk-assets.lambdaschool.com/c432f179-8bd7-4758-959d-d88a21f96bca_37105899_432228420518610_5035444036064772096_n.jpg\",\r\n    imageUrl:\r\n      \"https://tk-assets.lambdaschool.com/43bf01f9-319c-469d-8cf5-0120fe1007f1_yosemite.jpg\",\r\n    likes: 5306,\r\n    timestamp: \"July 14th 2017, 10:04:08 am\",\r\n    comments: [\r\n      {\r\n        username: \"playhearthstone\",\r\n        text: \"Love this shot!\"\r\n      },\r\n      {\r\n        username: \"awaywetravel\",\r\n        text: \"Yosemite is my most favorite place in the universe\"\r\n      },\r\n      {\r\n        username: \"awesomebt28\",\r\n        text: \"I like how Half Dome looks so old and useless\"\r\n      }\r\n    ],\r\n    liked: false,\r\n    id: 3\r\n  }\r\n];\r\n\r\nexport default dummyData;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"../SearchBar/SearchContainer\";\r\nimport Post from \"./PostContainer\";\r\nimport Data from \"../../dummy-data\";\r\nimport \"../../App.css\";\r\n\r\nclass PostsPage extends Component {\r\n  state = {\r\n    list: [],\r\n    display: [],\r\n    search: \"\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      list: Data,\r\n      display: Data\r\n    });\r\n  };\r\n\r\n//   handleSearchInput = e => {\r\n//     this.setState({\r\n//       search: e.target.value\r\n//     });\r\n//   };\r\n\r\nhandleSearchInput = e => {\r\n    this.setState({\r\n      search: e.target.value,\r\n      display: this.state.list.filter(post => post.username.includes(e.target.value))\r\n    });\r\n  };\r\n\r\n\r\n\r\n  displayLiked = () => {\r\n      this.setState({\r\n          display: this.state.list.filter(post => post.liked)\r\n      })\r\n  }\r\n\r\n  logOut = () => {\r\n      localStorage.clear()\r\n      window.location.reload()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Search\r\n          logOut={this.logOut}\r\n          handleSearchInput={this.handleSearchInput}\r\n          searchFilter={this.searchFilter}\r\n          search={this.state.search}\r\n          displayLiked={this.displayLiked}\r\n        />{\" \"}\r\n        <Post list={this.state.display} toggleLiked={this.toggleLiked} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsPage;\r\n","import React from 'react';\r\nimport HeaderLogo from '../SearchBar/HeaderLogo'\r\n\r\nconst LoginHeader = () => {\r\n    return (\r\n        <div className=\"login-header\">\r\n            <HeaderLogo />\r\n            {/* <i className=\"fa fa-user fa-2x user\" /> */}\r\n        <div className=\"user\">\r\n            <i className=\"fa fa-user fa-2x user\" />\r\n            <p>Sign up</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginHeader;","import React, { Component } from \"react\";\r\nimport \"./login.css\";\r\nimport LoginHeader from './LoginHeader';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  submitLogin = e => {\r\n    localStorage.setItem(\"username\", this.state.username);\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n        <LoginHeader />\r\n      <form className=\"login-form\">\r\n        <h1\r\n          style={{\r\n            fontFamily: \"Grand Hotel\",\r\n            fontSize: \"3.5rem\",\r\n            color: \"#4267B2\",\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          Welcome to <span className=\"main-login-header\">FakestaGram</span>\r\n\r\n        </h1>\r\n        <h2 style={{ fontWeight: \"bold\" }}>Please login..</h2>\r\n        <div className=\"login-div\">\r\n          <div className=\"username field\">\r\n            <input\r\n              name=\"username\"\r\n              type=\"username\"\r\n              placeholder=\"User Name\"\r\n              style={{ textAlign: \"center\" }}\r\n              value={this.state.username}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"password field\">\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              style={{ textAlign: \"center\" }}\r\n              value={this.state.password}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"login-submit field\" onClick={this.submitLogin}>\r\n            <p>Login</p>\r\n          </div>\r\n\r\n          <div className=\"remember-me\">\r\n            <div>\r\n              <input type=\"checkbox\" />\r\n              <small>Remember me</small>\r\n            </div>\r\n            <small>\r\n              <a href=\"#\">Don't have an account?</a>\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\nimport PostsPage from \"./Components/PostContainer/PostsPage\";\nimport Login from \"./Components/Login/Login\";\nimport authenticate from \"./Components/Authentication/authenticate\";\n// import Search from \"./Components/SearchBar/SearchContainer\";\n// import Post from \"./Components/PostContainer/PostContainer\";\n// import Data from \"./dummy-data\";\n// import \"./App.css\";\n\n// class App extends Component {\n//   state = {\n//     list: [],\n//     display: [],\n//     search: \"\"\n//   };\n\n//   componentDidMount = () => {\n//     this.setState({\n//       list: Data,\n//       display: Data\n//     });\n//   };\n\n//   handleSearchInput = e => {\n//     this.setState({\n//       search: e.target.value\n//     });\n//   };\n\n//   searchFilter = e => {\n//     e.preventDefault();\n//     if (this.state.search === null) {\n//       this.setState({\n//         display: this.state.display,\n//         search: \"\"\n//       });\n//     } else {\n//       this.setState({\n//         display: this.state.list.filter(item =>\n//           item.username.includes(this.state.search)\n//         ),\n//         search: \"\"\n//       });\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Search\n//           handleSearchInput={this.handleSearchInput}\n//           searchFilter={this.searchFilter}\n//           search={this.state.search}\n//         />{\" \"}\n//         <Post list={this.state.display} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"my-app\">\n        <PostsPage />\n      </div>\n    );\n  }\n}\n\nexport default authenticate(App)(Login);\n","import React from \"react\";\r\n\r\nconst authenticate = Component1 => Component2 =>\r\n  class extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isLoggedIn: false\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (!localStorage.getItem(\"username\")) {\r\n        this.setState({\r\n          isLoggedIn: false\r\n        });\r\n      } else\r\n        this.setState({\r\n          isLoggedIn: true\r\n        });\r\n    }\r\n    render() {\r\n      if (this.state.isLoggedIn) return <Component1 />;\r\n      return <Component2 />;\r\n    }\r\n  };\r\n\r\nexport default authenticate;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}